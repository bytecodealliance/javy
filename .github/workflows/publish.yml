# One approach to testing changes to this is:
# 1. Fork this repo to your personal account
# 2. Go into the repo settings on your fork, go to _Actions_, go to _General_, under _Workflow permissions_, select _Read and Write permissions_, then _Save_
# 3. Add your fork as a new remote and push your branch to it
# 4. Publish a release in your personal fork with the target of the release set to the branch with your changes
# 5. Confirm the workflow completes and that assets are attached to the release as expected

name: Publish

on:
  release:
    types:
      - published

jobs:
  compile_core:
    name: Compile Core
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install wasi-sdk
        run: make download-wasi-sdk

      - name: Install wizer
        run: cargo install wizer --all-features

      - name: Make core
        run: make core

      - name: Upload core binary to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: engine
          path: target/wasm32-wasi/release/javy_core.wasm

      - name: Upload core dylib to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: provider
          path: target/wasm32-wasi/release/javy_quickjs_provider.wasm

  compile_cli:
    name: Compile CLI
    needs: compile_core
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: linux
            os: ubuntu-latest
            path: target/release/javy
            asset_name: javy-x86_64-linux-${{ github.event.release.tag_name }}
            shasum_cmd: sha256sum
          - name: macos
            os: macos-latest
            path: target/release/javy
            asset_name: javy-x86_64-macos-${{ github.event.release.tag_name }}
            shasum_cmd: shasum -a 256
          - name: windows
            os: windows-latest
            path: target\release\javy.exe
            asset_name: javy-x86_64-windows-${{ github.event.release.tag_name }}
            shasum_cmd: sha256sum

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: engine
          path: crates/cli/

      - uses: actions/download-artifact@v3
        with:
          name: provider
          path: target/wasm32-wasi/release/

      - name: Build CLI ${{ matrix.os }}
        env:
          JAVY_ENGINE_PATH: javy_core.wasm
        run: cargo build --release --package javy

      - name: Archive assets
        run: gzip -k -f ${{ matrix.path }} && mv ${{ matrix.path }}.gz ${{ matrix.asset_name }}.gz

      - name: Upload assets to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.asset_name }}.gz
          path: ${{ matrix.asset_name }}.gz

      - name: Upload assets to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ matrix.asset_name }}.gz
          asset_name: ${{ matrix.asset_name }}.gz
          asset_content_type: application/gzip

      - name: Generate asset hash
        run: ${{ matrix.shasum_cmd }} ${{ matrix.asset_name }}.gz | awk '{ print $1 }' > ${{ matrix.asset_name }}.gz.sha256

      - name: Upload asset hash to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.asset_name }}.gz.sha256
          path: ${{ matrix.asset_name }}.gz.sha256

      - name: Upload asset hash to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ matrix.asset_name }}.gz.sha256
          asset_name: ${{ matrix.asset_name }}.gz.sha256
          asset_content_type: plain/text
